import java.time.*
import java.time.format.DateTimeFormatter

pipeline {
    agent any

    environment {
        REPOSITORY_URI = "backend-security"
    }

    stages {

        stage('Construyendo Tag') {
            steps {
                script {
                    // Fecha actual en formato yyMMdd.HHmm UTC
                    def now = new Date()
                    def dateNow = now.format("yyMMdd.HHmm", TimeZone.getTimeZone('UTC'))

                    // Construcci√≥n del tag con n√∫mero de build
                    def dockerTag = "${dateNow}.${BUILD_NUMBER}"
                    def repositoryUriApp = "${REPOSITORY_URI}:${dockerTag}"

                    // Guardar en variables del pipeline
                    env.DATE_NOW = dateNow
                    env.DOCKER_TAG = dockerTag
                    env.REPOSITORY_URI_APP = repositoryUriApp

                    echo "üïí Fecha actual: ${env.DATE_NOW}"
                    echo "üè∑Ô∏è Tag generado: ${env.REPOSITORY_URI_APP}"
                }
            }
        }

        stage('Desplegando con Docker Compose') {
            steps {
                script {
                    echo "üöÄ Iniciando despliegue con Docker Compose..."
                    
                    // Aseg√∫rate de que docker-compose.yml est√© en ./devops/
                    sh """
                        echo 'üì¶ Usando imagen: ${REPOSITORY_URI_APP}'
                        docker compose -f ./devops/docker-compose.yml up -d --build
                        docker image prune -f
                    """
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Pipeline completado exitosamente: ${env.REPOSITORY_URI_APP}"
            sh "docker ps"
        }
        failure {
            echo "‚ùå Error durante la ejecuci√≥n del pipeline. Verifica los logs en Jenkins."
        }
    }
}
